// <auto-generated />
using System;
using EntityFrameworkCorePartitionPoC.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkCorePartitionPoC.Infrastructure.Migrations
{
    [DbContext(typeof(PartitionPocContext))]
    [Migration("20250205170840_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec79499a-3357-40b7-a5a6-d5483692a3fc"),
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = new Guid("6b7e5907-403f-468f-affe-ddf693d2ba69"),
                            Name = "Estee Lauder"
                        },
                        new
                        {
                            Id = new Guid("dcd71abf-ad28-4cdc-bc0c-bcac0441b0f1"),
                            Name = "Primark"
                        });
                });

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fca25cc3-fd41-4d57-bc3f-fab878b84e18"),
                            CustomerId = new Guid("ec79499a-3357-40b7-a5a6-d5483692a3fc"),
                            OrderDate = new DateOnly(2024, 2, 5),
                            PartitionKey = "",
                            Volume = 42.0,
                            Weight = 2342.0
                        },
                        new
                        {
                            Id = new Guid("cd545d42-4722-47a2-a740-923ac2532c49"),
                            CustomerId = new Guid("6b7e5907-403f-468f-affe-ddf693d2ba69"),
                            OrderDate = new DateOnly(2024, 5, 29),
                            PartitionKey = "",
                            Volume = 12.0,
                            Weight = 2.0
                        },
                        new
                        {
                            Id = new Guid("23312ae0-3de3-4d39-ab9a-44e3c683c36c"),
                            CustomerId = new Guid("dcd71abf-ad28-4cdc-bc0c-bcac0441b0f1"),
                            OrderDate = new DateOnly(2024, 8, 1),
                            PartitionKey = "",
                            Volume = 4756.0
                        },
                        new
                        {
                            Id = new Guid("18917576-fb65-428b-a47b-e86cf79b7355"),
                            CustomerId = new Guid("dcd71abf-ad28-4cdc-bc0c-bcac0441b0f1"),
                            OrderDate = new DateOnly(2024, 11, 9),
                            PartitionKey = "",
                            Volume = 235.0,
                            Weight = 288.0
                        },
                        new
                        {
                            Id = new Guid("bf231903-c26c-4878-8452-52909099683d"),
                            CustomerId = new Guid("dcd71abf-ad28-4cdc-bc0c-bcac0441b0f1"),
                            OrderDate = new DateOnly(2025, 2, 2),
                            PartitionKey = "",
                            Weight = 457847.0
                        });
                });

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartitionKey")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("718d2717-e71a-42c8-9638-59c78c3a6f95"),
                            Item = "Item 1",
                            OrderId = new Guid("fca25cc3-fd41-4d57-bc3f-fab878b84e18"),
                            PartitionKey = "",
                            Price = 238.12m
                        },
                        new
                        {
                            Id = new Guid("ba0a7a3f-0a6a-41fb-92df-7f77e3baaa65"),
                            Item = "Item 2",
                            OrderId = new Guid("fca25cc3-fd41-4d57-bc3f-fab878b84e18"),
                            PartitionKey = "",
                            Price = 5776.43m
                        },
                        new
                        {
                            Id = new Guid("3d310b25-d3c2-48cd-b8cc-f926eecc9060"),
                            Item = "Item 1",
                            OrderId = new Guid("cd545d42-4722-47a2-a740-923ac2532c49"),
                            PartitionKey = "",
                            Price = 238.12m
                        },
                        new
                        {
                            Id = new Guid("521e6807-ed49-4e3e-9323-a3fc16e653ab"),
                            Item = "Item 4",
                            OrderId = new Guid("cd545d42-4722-47a2-a740-923ac2532c49"),
                            PartitionKey = "",
                            Price = 332.00m
                        },
                        new
                        {
                            Id = new Guid("d4d78920-0faa-438d-9bc3-73e9e5a5cbb2"),
                            Item = "Item 7",
                            OrderId = new Guid("23312ae0-3de3-4d39-ab9a-44e3c683c36c"),
                            PartitionKey = "",
                            Price = 223.00m
                        },
                        new
                        {
                            Id = new Guid("3e756ab8-3b62-41a6-8a75-b6f8347f4f01"),
                            Item = "Item 9",
                            OrderId = new Guid("23312ae0-3de3-4d39-ab9a-44e3c683c36c"),
                            PartitionKey = "",
                            Price = 988.00m
                        },
                        new
                        {
                            Id = new Guid("704cf48c-8a74-49ee-a283-0f8af2aa880a"),
                            Item = "Item 8",
                            OrderId = new Guid("23312ae0-3de3-4d39-ab9a-44e3c683c36c"),
                            PartitionKey = "",
                            Price = 3.00m
                        },
                        new
                        {
                            Id = new Guid("454b3e7a-65ec-44a2-bc2f-2afc9fce2989"),
                            Item = "Item 4",
                            OrderId = new Guid("23312ae0-3de3-4d39-ab9a-44e3c683c36c"),
                            PartitionKey = "",
                            Price = 88.00m
                        },
                        new
                        {
                            Id = new Guid("90879c03-1e43-486f-8f02-50ba4b9cc4a0"),
                            Item = "Item 7",
                            OrderId = new Guid("18917576-fb65-428b-a47b-e86cf79b7355"),
                            PartitionKey = "",
                            Price = 223.00m
                        },
                        new
                        {
                            Id = new Guid("5546d99e-346b-4333-a716-7a30a562feac"),
                            Item = "Item 9",
                            OrderId = new Guid("18917576-fb65-428b-a47b-e86cf79b7355"),
                            PartitionKey = "",
                            Price = 4576.00m
                        },
                        new
                        {
                            Id = new Guid("b5f7c577-89b4-41dd-814a-b4d290deb733"),
                            Item = "Item 5",
                            OrderId = new Guid("bf231903-c26c-4878-8452-52909099683d"),
                            PartitionKey = "",
                            Price = 89.25m
                        },
                        new
                        {
                            Id = new Guid("7fa197cb-950f-42e4-89bd-36ee23b8358a"),
                            Item = "Item 8",
                            OrderId = new Guid("bf231903-c26c-4878-8452-52909099683d"),
                            PartitionKey = "",
                            Price = 123.87m
                        });
                });

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.Order", b =>
                {
                    b.HasOne("EntityFrameworkCorePartitionPoC.Infrastructure.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.OrderItem", b =>
                {
                    b.HasOne("EntityFrameworkCorePartitionPoC.Infrastructure.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("EntityFrameworkCorePartitionPoC.Infrastructure.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
